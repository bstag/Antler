---
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';

const title = 'API Reference';
const description = 'Complete API documentation for Antler with interactive examples.';

// Sample API endpoints - in a real application, this could come from OpenAPI spec
const apiSections = [
  {
    title: 'Content Collections',
    description: 'APIs for managing and retrieving content collections',
    endpoints: [
      {
        method: 'GET',
        path: '/api/collections',
        description: 'Get all available content collections',
        parameters: [],
        response: {
          type: 'object',
          properties: {
            collections: {
              type: 'array',
              items: {
                type: 'string'
              }
            }
          }
        },
        example: {
          collections: ['blog', 'projects', 'docs']
        }
      },
      {
        method: 'GET',
        path: '/api/collections/{collection}',
        description: 'Get all entries from a specific collection',
        parameters: [
          { name: 'collection', type: 'string', required: true, description: 'Collection name' },
          { name: 'limit', type: 'number', required: false, description: 'Number of entries to return' },
          { name: 'offset', type: 'number', required: false, description: 'Number of entries to skip' }
        ],
        response: {
          type: 'object',
          properties: {
            data: { type: 'array' },
            total: { type: 'number' },
            limit: { type: 'number' },
            offset: { type: 'number' }
          }
        },
        example: {
          data: [
            {
              slug: 'getting-started-with-ssg',
              title: 'Getting Started with SSG',
              publishedAt: '2024-01-15'
            }
          ],
          total: 1,
          limit: 10,
          offset: 0
        }
      }
    ]
  },
  {
    title: 'Search',
    description: 'Search functionality across all content',
    endpoints: [
      {
        method: 'GET',
        path: '/api/search',
        description: 'Search across all content collections',
        parameters: [
          { name: 'q', type: 'string', required: true, description: 'Search query' },
          { name: 'collections', type: 'string', required: false, description: 'Comma-separated list of collections to search' },
          { name: 'limit', type: 'number', required: false, description: 'Number of results to return' }
        ],
        response: {
          type: 'object',
          properties: {
            results: { type: 'array' },
            total: { type: 'number' },
            query: { type: 'string' }
          }
        },
        example: {
          results: [
            {
              collection: 'blog',
              slug: 'getting-started-with-ssg',
              title: 'Getting Started with SSG',
              excerpt: 'Learn how to build fast static sites...',
              score: 0.95
            }
          ],
          total: 1,
          query: 'static site generator'
        }
      }
    ]
  },
  {
    title: 'Contact',
    description: 'Contact form submission endpoints',
    endpoints: [
      {
        method: 'POST',
        path: '/api/contact',
        description: 'Submit a contact form',
        parameters: [],
        requestBody: {
          type: 'object',
          properties: {
            name: { type: 'string', required: true },
            email: { type: 'string', required: true },
            subject: { type: 'string', required: false },
            message: { type: 'string', required: true }
          }
        },
        response: {
          type: 'object',
          properties: {
            success: { type: 'boolean' },
            message: { type: 'string' },
            id: { type: 'string' }
          }
        },
        example: {
          success: true,
          message: 'Message sent successfully',
          id: 'msg_123456789'
        }
      }
    ]
  }
];
---

<BaseLayout title={title} description={description}>
  <Header />
  <main class="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 dark:from-slate-900 dark:to-slate-800">
    <div class="container mx-auto px-4 py-16">
      <!-- Header -->
      <div class="text-center mb-16">
        <h1 class="text-4xl md:text-5xl font-bold text-slate-900 dark:text-white mb-4">
          API Reference
        </h1>
        <p class="text-xl text-slate-600 dark:text-slate-300 max-w-2xl mx-auto">
          Complete documentation for all available APIs with interactive examples
        </p>
      </div>

      <div class="max-w-7xl mx-auto">
        <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
          <!-- Sidebar Navigation -->
          <aside class="lg:col-span-1">
            <div class="sticky top-8">
              <nav class="bg-white dark:bg-slate-800 rounded-xl shadow-lg p-6">
                <h3 class="text-lg font-bold text-slate-900 dark:text-white mb-4">
                  API Sections
                </h3>
                
                <ul class="space-y-2">
                  {apiSections.map(section => (
                    <li>
                      <a 
                        href={`#${section.title.toLowerCase().replace(/\s+/g, '-')}`}
                        class="block px-3 py-2 text-sm text-slate-600 dark:text-slate-400 hover:text-slate-900 dark:hover:text-white hover:bg-slate-100 dark:hover:bg-slate-700 rounded-lg transition-colors"
                      >
                        {section.title}
                      </a>
                    </li>
                  ))}
                </ul>

                <!-- Quick Links -->
                <div class="mt-8 pt-6 border-t border-slate-200 dark:border-slate-700">
                  <h4 class="text-sm font-semibold text-slate-900 dark:text-white mb-3">
                    Quick Links
                  </h4>
                  <ul class="space-y-2 text-sm">
                    <li>
                      <a href="/docs" class="text-primary hover:opacity-80 transition-all">
                        Documentation
                      </a>
                    </li>
                    <li>
                      <a href="/contact" class="text-primary hover:opacity-80 transition-all">
                        Support
                      </a>
                    </li>
                  </ul>
                </div>
              </nav>
            </div>
          </aside>

          <!-- Main Content -->
          <main class="lg:col-span-3 space-y-12">
            {apiSections.map(section => (
              <section id={section.title.toLowerCase().replace(/\s+/g, '-')} class="scroll-mt-8">
                <div class="bg-white dark:bg-slate-800 rounded-xl shadow-lg overflow-hidden">
                  <!-- Section Header -->
                  <header class="px-8 py-6 border-b border-slate-200 dark:border-slate-700">
                    <h2 class="text-2xl font-bold text-slate-900 dark:text-white mb-2">
                      {section.title}
                    </h2>
                    <p class="text-slate-600 dark:text-slate-300">
                      {section.description}
                    </p>
                  </header>

                  <!-- Endpoints -->
                  <div class="divide-y divide-slate-200 dark:divide-slate-700">
                    {section.endpoints.map((endpoint, index) => (
                      <div class="p-8">
                        <!-- Endpoint Header -->
                        <div class="flex items-start gap-4 mb-6">
                          <span class={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${
                            endpoint.method === 'GET' 
                              ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'
                              : endpoint.method === 'POST'
                              ? 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200'
                              : endpoint.method === 'PUT'
                              ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'
                              : 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'
                          }`}>
                            {endpoint.method}
                          </span>
                          <div class="flex-1">
                            <code class="text-lg font-mono text-slate-900 dark:text-white bg-slate-100 dark:bg-slate-700 px-3 py-1 rounded">
                              {endpoint.path}
                            </code>
                            <p class="text-slate-600 dark:text-slate-300 mt-2">
                              {endpoint.description}
                            </p>
                          </div>
                        </div>

                        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                          <!-- Parameters & Request -->
                          <div class="space-y-6">
                            {endpoint.parameters && endpoint.parameters.length > 0 && (
                              <div>
                                <h4 class="text-lg font-semibold text-slate-900 dark:text-white mb-3">
                                  Parameters
                                </h4>
                                <div class="space-y-3">
                                  {endpoint.parameters.map(param => (
                                    <div class="bg-slate-50 dark:bg-slate-700 rounded-lg p-4">
                                      <div class="flex items-center gap-2 mb-2">
                                        <code class="text-sm font-mono text-primary">
                                          {param.name}
                                        </code>
                                        <span class="text-xs text-slate-500 dark:text-slate-400">
                                          {param.type}
                                        </span>
                                        {param.required && (
                                          <span class="text-xs bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200 px-2 py-0.5 rounded">
                                            required
                                          </span>
                                        )}
                                      </div>
                                      <p class="text-sm text-slate-600 dark:text-slate-300">
                                        {param.description}
                                      </p>
                                    </div>
                                  ))}
                                </div>
                              </div>
                            )}

                            {'requestBody' in endpoint && endpoint.requestBody && (
                              <div>
                                <h4 class="text-lg font-semibold text-slate-900 dark:text-white mb-3">
                                  Request Body
                                </h4>
                                <div class="bg-slate-50 dark:bg-slate-700 rounded-lg p-4">
                                  <pre class="text-sm text-slate-800 dark:text-slate-200 overflow-x-auto">
                                    <code>{JSON.stringify(endpoint.requestBody, null, 2)}</code>
                                  </pre>
                                </div>
                              </div>
                            )}
                          </div>

                          <!-- Response & Example -->
                          <div class="space-y-6">
                            <div>
                              <h4 class="text-lg font-semibold text-slate-900 dark:text-white mb-3">
                                Response Schema
                              </h4>
                              <div class="bg-slate-50 dark:bg-slate-700 rounded-lg p-4">
                                <pre class="text-sm text-slate-800 dark:text-slate-200 overflow-x-auto">
                                  <code>{JSON.stringify(endpoint.response, null, 2)}</code>
                                </pre>
                              </div>
                            </div>

                            <div>
                              <h4 class="text-lg font-semibold text-slate-900 dark:text-white mb-3">
                                Example Response
                              </h4>
                              <div class="bg-slate-900 rounded-lg p-4">
                                <pre class="text-sm text-green-400 overflow-x-auto">
                                  <code>{JSON.stringify(endpoint.example, null, 2)}</code>
                                </pre>
                              </div>
                            </div>
                          </div>
                        </div>

                        <!-- Try It Out Button -->
                        <div class="mt-6 pt-6 border-t border-slate-200 dark:border-slate-700">
                          <button
                            class="btn-primary inline-flex items-center gap-2 px-4 py-2 rounded-lg font-medium"
                            onclick={`tryEndpoint('${endpoint.method}', '${endpoint.path}')`}
                          >
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1m-6 4h1m4 0h1m6-6a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            Try it out
                          </button>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              </section>
            ))}

            <!-- SDK Examples -->
            <section class="bg-white dark:bg-slate-800 rounded-xl shadow-lg overflow-hidden">
              <header class="px-8 py-6 border-b border-slate-200 dark:border-slate-700">
                <h2 class="text-2xl font-bold text-slate-900 dark:text-white mb-2">
                  SDK Examples
                </h2>
                <p class="text-slate-600 dark:text-slate-300">
                  Code examples for popular programming languages
                </p>
              </header>

              <div class="p-8">
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                  <!-- JavaScript Example -->
                  <div>
                    <h3 class="text-lg font-semibold text-slate-900 dark:text-white mb-4 flex items-center gap-2">
                      <svg class="w-5 h-5 text-yellow-500" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M0 0h24v24H0V0zm22.034 18.276c-.175-1.095-.888-2.015-3.003-2.873-.736-.345-1.554-.585-1.797-1.14-.091-.33-.105-.51-.046-.705.15-.646.915-.84 1.515-.66.39.12.75.42.976.9 1.034-.676 1.034-.676 1.755-1.125-.27-.42-.404-.601-.586-.78-.63-.705-1.469-1.065-2.834-1.034l-.705.089c-.676.165-1.32.525-1.71 1.005-1.14 1.291-.811 3.541.569 4.471 1.365 1.02 3.361 1.244 3.616 2.205.24 1.17-.87 1.545-1.966 1.41-.811-.18-1.26-.586-1.755-1.336l-1.83 1.051c.21.48.45.689.81 1.109 1.74 1.756 6.09 1.666 6.871-1.004.029-.09.24-.705.074-1.65l.046.067zm-8.983-7.245h-2.248c0 1.938-.009 3.864-.009 5.805 0 1.232.063 2.363-.138 2.711-.33.689-1.18.601-1.566.48-.396-.196-.597-.466-.83-.855-.063-.105-.11-.196-.127-.196l-1.825 1.125c.305.63.75 1.172 1.324 1.517.855.51 2.004.675 3.207.405.783-.226 1.458-.691 1.811-1.411.51-.93.402-2.07.397-3.346.012-2.054 0-4.109 0-6.179l.004-.056z"/>
                      </svg>
                      JavaScript
                    </h3>
                    <div class="bg-slate-900 rounded-lg p-4">
                      <pre class="text-sm text-slate-100 overflow-x-auto">
                        <code>{`// Fetch blog posts
const response = await fetch('/api/collections/blog');
const data = await response.json();

// Search content
const searchResults = await fetch('/api/search?q=astro');
const results = await searchResults.json();

// Submit contact form
const contactResponse = await fetch('/api/contact', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
  },
  body: JSON.stringify({
    name: 'John Doe',
    email: 'john@example.com',
    message: 'Hello!'
  })
});`}</code>
                      </pre>
                    </div>
                  </div>

                  <!-- Python Example -->
                  <div>
                    <h3 class="text-lg font-semibold text-slate-900 dark:text-white mb-4 flex items-center gap-2">
                      <svg class="w-5 h-5 text-blue-500" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M14.25.18l.9.2.73.26.59.3.45.32.34.34.25.34.16.33.1.3.04.26.02.2-.01.13V8.5l-.05.63-.13.55-.21.46-.26.38-.3.31-.33.25-.35.19-.35.14-.33.1-.3.07-.26.04-.21.02H8.77l-.69.05-.59.14-.5.22-.41.27-.33.32-.27.35-.2.36-.15.37-.1.35-.07.32-.04.27-.02.21v3.06H3.17l-.21-.03-.28-.07-.32-.12-.35-.18-.36-.26-.36-.36-.35-.46-.32-.59-.28-.73-.21-.88-.14-1.05-.05-1.23.06-1.22.16-1.04.24-.87.32-.71.36-.57.4-.44.42-.33.42-.24.4-.16.36-.1.32-.05.24-.01h.16l.06.01h8.16v-.83H6.18l-.01-2.75-.02-.37.05-.34.11-.31.17-.28.25-.26.31-.23.38-.2.44-.18.51-.15.58-.12.64-.1.71-.06.77-.04.84-.02 1.27.05zm-6.3 1.98l-.23.33-.08.41.08.41.23.34.33.22.41.09.41-.09.33-.22.23-.34.08-.41-.08-.41-.23-.33-.33-.22-.41-.09-.41.09zm13.09 3.95l.28.06.32.12.35.18.36.27.36.35.35.47.32.59.28.73.21.88.14 1.04.05 1.23-.06 1.23-.16 1.04-.24.86-.32.71-.36.57-.4.45-.42.33-.42.24-.4.16-.36.09-.32.05-.24.02-.16-.01h-8.22v.82h5.84l.01 2.76.02.36-.05.34-.11.31-.17.29-.25.25-.31.24-.38.2-.44.17-.51.15-.58.13-.64.09-.71.07-.77.04-.84.01-1.27-.04-1.07-.14-.9-.2-.73-.25-.59-.3-.45-.33-.34-.34-.25-.34-.16-.33-.1-.3-.04-.25-.02-.2.01-.13v-5.34l.05-.64.13-.54.21-.46.26-.38.3-.32.33-.24.35-.2.35-.14.33-.1.3-.06.26-.04.21-.02.13-.01h5.84l.69-.05.59-.14.5-.21.41-.28.33-.32.27-.35.2-.36.15-.36.1-.35.07-.32.04-.28.02-.21V6.07h2.09l.14.01zm-6.47 14.25l-.23.33-.08.41.08.41.23.33.33.23.41.08.41-.08.33-.23.23-.33.08-.41-.08-.41-.23-.33-.33-.23-.41-.08-.41.08z"/>
                      </svg>
                      Python
                    </h3>
                    <div class="bg-slate-900 rounded-lg p-4">
                      <pre class="text-sm text-slate-100 overflow-x-auto">
                        <code>{`import requests

# Fetch blog posts
response = requests.get('/api/collections/blog')
data = response.json()

# Search content
search_response = requests.get('/api/search', 
    params={'q': 'astro'})
results = search_response.json()

# Submit contact form
contact_data = {
    'name': 'John Doe',
    'email': 'john@example.com',
    'message': 'Hello!'
}
contact_response = requests.post('/api/contact', 
    json=contact_data)`}</code>
                      </pre>
                    </div>
                  </div>
                </div>
              </div>
            </section>
          </main>
        </div>
      </div>
    </div>
  </main>
</BaseLayout>

<script>
  function tryEndpoint(method: string, path: string) {
    // In a real implementation, this would open an interactive API testing interface
    alert(`This would open an interactive tester for ${method} ${path}`);
  }

  // Smooth scrolling for anchor links
  document.addEventListener('DOMContentLoaded', () => {
    const links = document.querySelectorAll('a[href^="#"]');
    
    links.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        const targetId = link.getAttribute('href')?.substring(1);
        const targetElement = document.getElementById(targetId || '');
        
        if (targetElement) {
          targetElement.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      });
    });
  });
</script>