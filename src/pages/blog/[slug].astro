---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Header.astro';
import ConditionalRoute from '../../components/ConditionalRoute.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();

// Get all posts for navigation
const allPosts = await getCollection('blog');
const sortedPosts = allPosts.sort((a, b) => 
  new Date(b.data.publicationDate).getTime() - new Date(a.data.publicationDate).getTime()
);

const currentIndex = sortedPosts.findIndex(p => p.slug === post.slug);
const prevPost = currentIndex < sortedPosts.length - 1 ? sortedPosts[currentIndex + 1] : null;
const nextPost = currentIndex > 0 ? sortedPosts[currentIndex - 1] : null;

const title = post.data.title;
const description = post.data.description;
---

<ConditionalRoute contentTypeId="blog">
  <BaseLayout title={title} description={description}>
    <Header />
    <main class="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 dark:from-slate-900 dark:to-slate-800">
    <article class="container mx-auto px-4 py-16 max-w-4xl">
      <!-- Back to Blog -->
      <div class="mb-8">
        <a 
          href="/blog" 
          class="inline-flex items-center gap-2 text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 transition-colors"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
          Back to Blog
        </a>
      </div>

      <!-- Article Header -->
      <header class="mb-12">
        {post.data.featuredImage && (
          <div class="aspect-video mb-8 rounded-xl overflow-hidden shadow-lg">
            <img 
              src={post.data.featuredImage} 
              alt={post.data.title}
              class="w-full h-full object-cover"
            />
          </div>
        )}

        <div class="flex flex-wrap gap-2 mb-4">
          {post.data.tags.map(tag => (
            <span class="px-3 py-1 text-sm font-medium bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full">
              {tag}
            </span>
          ))}
        </div>

        <h1 class="text-4xl md:text-5xl font-bold text-slate-900 dark:text-white mb-6 leading-tight">
          {post.data.title}
        </h1>

        <div class="flex flex-wrap items-center gap-6 text-slate-600 dark:text-slate-300">
          <div class="flex items-center gap-2">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            <time datetime={post.data.publicationDate.toISOString()}>
              {new Date(post.data.publicationDate).toLocaleDateString('en-US', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
              })}
            </time>
          </div>

          {post.data.readingTime && (
            <div class="flex items-center gap-2">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <span>{post.data.readingTime} min read</span>
            </div>
          )}

          {post.data.author && (
            <div class="flex items-center gap-2">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
              <span>By {post.data.author}</span>
            </div>
          )}
        </div>
      </header>

      <!-- Article Content -->
      <div class="prose prose-lg prose-slate dark:prose-invert max-w-none mb-12">
        <Content />
      </div>

      <!-- Article Navigation -->
      <nav class="border-t border-slate-200 dark:border-slate-700 pt-8">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          {prevPost && (
            <div class="group">
              <p class="text-sm text-slate-500 dark:text-slate-400 mb-2">Previous Article</p>
              <a 
                href={`/blog/${prevPost.slug}`}
                class="block p-4 bg-white dark:bg-slate-800 rounded-lg shadow-sm hover:shadow-md transition-all duration-200 border border-slate-200 dark:border-slate-700"
              >
                <h3 class="font-semibold text-slate-900 dark:text-white group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
                  {prevPost.data.title}
                </h3>
                <p class="text-sm text-slate-600 dark:text-slate-300 mt-1 line-clamp-2">
                  {prevPost.data.description}
                </p>
              </a>
            </div>
          )}

          {nextPost && (
            <div class="group md:text-right">
              <p class="text-sm text-slate-500 dark:text-slate-400 mb-2">Next Article</p>
              <a 
                href={`/blog/${nextPost.slug}`}
                class="block p-4 bg-white dark:bg-slate-800 rounded-lg shadow-sm hover:shadow-md transition-all duration-200 border border-slate-200 dark:border-slate-700"
              >
                <h3 class="font-semibold text-slate-900 dark:text-white group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
                  {nextPost.data.title}
                </h3>
                <p class="text-sm text-slate-600 dark:text-slate-300 mt-1 line-clamp-2">
                  {nextPost.data.description}
                </p>
              </a>
            </div>
          )}
        </div>
      </nav>

      <!-- Back to Top -->
      <div class="text-center mt-12">
        <button 
          onclick="window.scrollTo({top: 0, behavior: 'smooth'})"
          class="inline-flex items-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"></path>
          </svg>
          Back to Top
        </button>
      </div>
    </article>
  </main>
  </BaseLayout>
</ConditionalRoute>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Enhanced prose styling */
  .prose {
    @apply text-slate-700 dark:text-slate-300;
  }

  .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    @apply text-slate-900 dark:text-white font-bold;
  }

  .prose h2 {
    @apply text-2xl mt-8 mb-4;
  }

  .prose h3 {
    @apply text-xl mt-6 mb-3;
  }

  .prose p {
    @apply mb-4 leading-relaxed;
  }

  .prose ul, .prose ol {
    @apply mb-4;
  }

  .prose li {
    @apply mb-2;
  }

  .prose blockquote {
    @apply border-l-4 border-blue-500 pl-4 italic text-slate-600 dark:text-slate-400 bg-blue-50 dark:bg-blue-900/20 py-2 rounded-r;
  }

  .prose code {
    @apply bg-slate-100 dark:bg-slate-800 px-2 py-1 rounded text-sm font-mono;
  }

  .prose pre {
    @apply bg-slate-900 text-slate-100 p-4 rounded-lg overflow-x-auto;
  }

  .prose pre code {
    @apply bg-transparent p-0;
  }

  .prose a {
    @apply text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 underline;
  }

  .prose img {
    @apply rounded-lg shadow-md;
  }
</style>